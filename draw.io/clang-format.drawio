<mxfile host="65bd71144e">
    <diagram id="wjxQC-PGX3YTZu4ArLqo" name="第 1 页">
        <mxGraphModel dx="2550" dy="1633" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="4" value="依赖" style="edgeStyle=none;html=1;" edge="1" parent="1" source="3" target="5">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="330" y="330.0000000000001" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="3" value="Clang-Format" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="220" y="200" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="5" value=".clang-format&lt;br&gt;配置文件" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="294" y="330" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="生成文件" style="edgeStyle=none;html=1;" edge="1" parent="1" source="9" target="5">
                    <mxGeometry relative="1" as="geometry">
                        <Array as="points">
                            <mxPoint x="450" y="360"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="9" value="CLI命令：&lt;br&gt;&lt;pre style=&quot;margin-top: 0px ; margin-bottom: 0px ; background: rgb(246 , 246 , 246) ; border-radius: 4px ; font-size: 0.9em ; overflow: auto ; color: rgb(18 , 18 , 18)&quot;&gt;&lt;code class=&quot;language-text&quot; style=&quot;background-color: inherit ; border-radius: 0px ; font-family: &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;consolas&amp;#34; , &amp;#34;andale mono&amp;#34; , &amp;#34;lucida console&amp;#34; , &amp;#34;courier new&amp;#34; , monospace ; font-size: inherit ; margin: 0px ; padding: 0px&quot;&gt;clang-format -style=google -dump-config &amp;gt; .clang-format&lt;/code&gt;&lt;/pre&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="490" y="330" width="350" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="11" value="style：&lt;br&gt;1. llvm&lt;br&gt;2. google&lt;br&gt;3. chromium&lt;br&gt;4. mozilla" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;labelBackgroundColor=#12FF2A;" vertex="1" parent="1">
                    <mxGeometry x="910" y="250" width="80" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="" style="endArrow=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="9" target="11">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="660" y="400" as="sourcePoint"/>
                        <mxPoint x="710" y="350" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="19" style="edgeStyle=none;html=1;fontFamily=Lucida Console;fontColor=#53B078;" edge="1" parent="1" source="14" target="18">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="IndentWidth: 4 # 缩进宽度&lt;br&gt;BreakWarpping: # 大括号定义&lt;br&gt;AfterFunction: true&lt;br&gt;BraceBeforeBrace: Custom" style="text;html=1;strokeColor=default;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=1;labelBackgroundColor=#FFFFFF;fontColor=#53B078;labelBorderColor=none;fontFamily=Lucida Console;labelPosition=center;verticalLabelPosition=middle;shadow=0;glass=0;spacingLeft=10;" vertex="1" parent="1">
                    <mxGeometry x="-80" y="290" width="230" height="70" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="" style="endArrow=none;html=1;fontFamily=Lucida Console;fontColor=#53B078;" edge="1" parent="1" source="14" target="5">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="390" y="390" as="sourcePoint"/>
                        <mxPoint x="440" y="340" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="18" value="&lt;div&gt;# 语言: None, Cpp, Java, JavaScript, ObjC, Proto, TableGen, TextProto&lt;/div&gt;&lt;div&gt;Language:&amp;nbsp; &amp;nbsp; Cpp&lt;/div&gt;&lt;div&gt;# BasedOnStyle:&amp;nbsp; &amp;nbsp; LLVM&lt;/div&gt;&lt;div&gt;# 访问说明符(public、private等)的偏移&lt;/div&gt;&lt;div&gt;AccessModifierOffset:&amp;nbsp; &amp;nbsp; -4&lt;/div&gt;&lt;div&gt;# 开括号(开圆括号、开尖括号、开方括号)后的对齐: Align, DontAlign, AlwaysBreak(总是在开括号后换行)&lt;/div&gt;&lt;div&gt;AlignAfterOpenBracket:&amp;nbsp; &amp;nbsp; Align&lt;/div&gt;&lt;div&gt;# 连续赋值时，对齐所有等号&lt;/div&gt;&lt;div&gt;AlignConsecutiveAssignments:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 连续声明时，对齐所有声明的变量名&lt;/div&gt;&lt;div&gt;AlignConsecutiveDeclarations:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 左对齐逃脱换行(使用反斜杠换行)的反斜杠&lt;/div&gt;&lt;div&gt;AlignEscapedNewlinesLeft:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 水平对齐二元和三元表达式的操作数&lt;/div&gt;&lt;div&gt;AlignOperands:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 对齐连续的尾随的注释&lt;/div&gt;&lt;div&gt;AlignTrailingComments:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 允许函数声明的所有参数在放在下一行&lt;/div&gt;&lt;div&gt;AllowAllParametersOfDeclarationOnNextLine:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 允许短的块放在同一行&lt;/div&gt;&lt;div&gt;AllowShortBlocksOnASingleLine:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 允许短的case标签放在同一行&lt;/div&gt;&lt;div&gt;AllowShortCaseLabelsOnASingleLine:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All&lt;/div&gt;&lt;div&gt;AllowShortFunctionsOnASingleLine:&amp;nbsp; &amp;nbsp; Empty&lt;/div&gt;&lt;div&gt;# 允许短的if语句保持在同一行&lt;/div&gt;&lt;div&gt;AllowShortIfStatementsOnASingleLine:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 允许短的循环保持在同一行&lt;/div&gt;&lt;div&gt;AllowShortLoopsOnASingleLine:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 总是在定义返回类型后换行(deprecated)&lt;/div&gt;&lt;div&gt;AlwaysBreakAfterDefinitionReturnType:&amp;nbsp; &amp;nbsp; None&lt;/div&gt;&lt;div&gt;# 总是在返回类型后换行: None, All, TopLevel(顶级函数，不包括在类中的函数),&amp;nbsp;&lt;/div&gt;&lt;div&gt;#&amp;nbsp; &amp;nbsp;AllDefinitions(所有的定义，不包括声明), TopLevelDefinitions(所有的顶级函数的定义)&lt;/div&gt;&lt;div&gt;AlwaysBreakAfterReturnType:&amp;nbsp; &amp;nbsp; None&lt;/div&gt;&lt;div&gt;# 总是在多行string字面量前换行&lt;/div&gt;&lt;div&gt;AlwaysBreakBeforeMultilineStrings:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 总是在template声明后换行&lt;/div&gt;&lt;div&gt;AlwaysBreakTemplateDeclarations:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# false表示函数实参要么都在同一行，要么都各自一行&lt;/div&gt;&lt;div&gt;BinPackArguments:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# false表示所有形参要么都在同一行，要么都各自一行&lt;/div&gt;&lt;div&gt;BinPackParameters:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 大括号换行，只有当BreakBeforeBraces设置为Custom时才有效&lt;/div&gt;&lt;div&gt;BraceWrapping:&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; # class定义后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterClass:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # 控制语句后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterControlStatement:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # enum定义后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterEnum:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # 函数定义后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterFunction:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # 命名空间定义后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterNamespace:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # ObjC定义后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterObjCDeclaration:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # struct定义后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterStruct:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # union定义后面&lt;/div&gt;&lt;div&gt;&amp;nbsp; AfterUnion:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # catch之前&lt;/div&gt;&lt;div&gt;&amp;nbsp; BeforeCatch:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # else之前&lt;/div&gt;&lt;div&gt;&amp;nbsp; BeforeElse:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;&amp;nbsp; # 缩进大括号&lt;/div&gt;&lt;div&gt;&amp;nbsp; IndentBraces:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 在二元运算符前换行: None(在操作符后换行), NonAssignment(在非赋值的操作符前换行), All(在操作符前换行)&lt;/div&gt;&lt;div&gt;BreakBeforeBinaryOperators:&amp;nbsp; &amp;nbsp; NonAssignment&lt;/div&gt;&lt;div&gt;# 在大括号前换行: Attach(始终将大括号附加到周围的上下文), Linux(除函数、命名空间和类定义，与Attach类似),&amp;nbsp;&lt;/div&gt;&lt;div&gt;#&amp;nbsp; &amp;nbsp;Mozilla(除枚举、函数、记录定义，与Attach类似), Stroustrup(除函数定义、catch、else，与Attach类似),&amp;nbsp;&lt;/div&gt;&lt;div&gt;#&amp;nbsp; &amp;nbsp;Allman(总是在大括号前换行), GNU(总是在大括号前换行，并对于控制语句的大括号增加额外的缩进), WebKit(在函数前换行), Custom&lt;/div&gt;&lt;div&gt;#&amp;nbsp; &amp;nbsp;注：这里认为语句块也属于函数&lt;/div&gt;&lt;div&gt;BreakBeforeBraces:&amp;nbsp; &amp;nbsp; Custom&lt;/div&gt;&lt;div&gt;# 在三元运算符前换行&lt;/div&gt;&lt;div&gt;BreakBeforeTernaryOperators:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 在构造函数的初始化列表的逗号前换行&lt;/div&gt;&lt;div&gt;BreakConstructorInitializersBeforeComma:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 每行字符的限制，0表示没有限制&lt;/div&gt;&lt;div&gt;ColumnLimit:&amp;nbsp; &amp;nbsp; 200&lt;/div&gt;&lt;div&gt;# 描述具有特殊意义的注释的正则表达式，它不应该被分割为多行或以其它方式改变&lt;/div&gt;&lt;div&gt;CommentPragmas:&amp;nbsp; &amp;nbsp; '^ IWYU pragma:'&lt;/div&gt;&lt;div&gt;# 构造函数的初始化列表要么都在同一行，要么都各自一行&lt;/div&gt;&lt;div&gt;ConstructorInitializerAllOnOneLineOrOnePerLine:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 构造函数的初始化列表的缩进宽度&lt;/div&gt;&lt;div&gt;ConstructorInitializerIndentWidth:&amp;nbsp; &amp;nbsp; 4&lt;/div&gt;&lt;div&gt;# 延续的行的缩进宽度&lt;/div&gt;&lt;div&gt;ContinuationIndentWidth:&amp;nbsp; &amp;nbsp; 4&lt;/div&gt;&lt;div&gt;# 去除C++11的列表初始化的大括号{后和}前的空格&lt;/div&gt;&lt;div&gt;Cpp11BracedListStyle:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 继承最常用的指针和引用的对齐方式&lt;/div&gt;&lt;div&gt;DerivePointerAlignment:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 关闭格式化&lt;/div&gt;&lt;div&gt;DisableFormat:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 自动检测函数的调用和定义是否被格式为每行一个参数(Experimental)&lt;/div&gt;&lt;div&gt;ExperimentalAutoDetectBinPacking:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 需要被解读为foreach循环而不是函数调用的宏&lt;/div&gt;&lt;div&gt;ForEachMacros:&amp;nbsp; &amp;nbsp; [ foreach, Q_FOREACH, BOOST_FOREACH ]&lt;/div&gt;&lt;div&gt;# 对#include进行排序，匹配了某正则表达式的#include拥有对应的优先级，匹配不到的则默认优先级为INT_MAX(优先级越小排序越靠前)，&lt;/div&gt;&lt;div&gt;#&amp;nbsp; &amp;nbsp;可以定义负数优先级从而保证某些#include永远在最前面&lt;/div&gt;&lt;div&gt;IncludeCategories:&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; - Regex:&amp;nbsp; &amp;nbsp; '^&quot;(llvm|llvm-c|clang|clang-c)/'&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Priority:&amp;nbsp; &amp;nbsp; 2&lt;/div&gt;&lt;div&gt;&amp;nbsp; - Regex:&amp;nbsp; &amp;nbsp; '^(&amp;lt;|&quot;(gtest|isl|json)/)'&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Priority:&amp;nbsp; &amp;nbsp; 3&lt;/div&gt;&lt;div&gt;&amp;nbsp; - Regex:&amp;nbsp; &amp;nbsp; '.*'&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Priority:&amp;nbsp; &amp;nbsp; 1&lt;/div&gt;&lt;div&gt;# 缩进case标签&lt;/div&gt;&lt;div&gt;IndentCaseLabels:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 缩进宽度&lt;/div&gt;&lt;div&gt;IndentWidth:&amp;nbsp; &amp;nbsp; 4&lt;/div&gt;&lt;div&gt;# 函数返回类型换行时，缩进函数声明或函数定义的函数名&lt;/div&gt;&lt;div&gt;IndentWrappedFunctionNames:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 保留在块开始处的空行&lt;/div&gt;&lt;div&gt;KeepEmptyLinesAtTheStartOfBlocks:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 开始一个块的宏的正则表达式&lt;/div&gt;&lt;div&gt;MacroBlockBegin:&amp;nbsp; &amp;nbsp; ''&lt;/div&gt;&lt;div&gt;# 结束一个块的宏的正则表达式&lt;/div&gt;&lt;div&gt;MacroBlockEnd:&amp;nbsp; &amp;nbsp; ''&lt;/div&gt;&lt;div&gt;# 连续空行的最大数量&lt;/div&gt;&lt;div&gt;MaxEmptyLinesToKeep:&amp;nbsp; &amp;nbsp; 1&lt;/div&gt;&lt;div&gt;# 命名空间的缩进: None, Inner(缩进嵌套的命名空间中的内容), All&lt;/div&gt;&lt;div&gt;NamespaceIndentation:&amp;nbsp; &amp;nbsp; Inner&lt;/div&gt;&lt;div&gt;# 使用ObjC块时缩进宽度&lt;/div&gt;&lt;div&gt;ObjCBlockIndentWidth:&amp;nbsp; &amp;nbsp; 4&lt;/div&gt;&lt;div&gt;# 在ObjC的@property后添加一个空格&lt;/div&gt;&lt;div&gt;ObjCSpaceAfterProperty:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 在ObjC的protocol列表前添加一个空格&lt;/div&gt;&lt;div&gt;ObjCSpaceBeforeProtocolList:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 在call(后对函数调用换行的penalty&lt;/div&gt;&lt;div&gt;PenaltyBreakBeforeFirstCallParameter:&amp;nbsp; &amp;nbsp; 19&lt;/div&gt;&lt;div&gt;# 在一个注释中引入换行的penalty&lt;/div&gt;&lt;div&gt;PenaltyBreakComment:&amp;nbsp; &amp;nbsp; 300&lt;/div&gt;&lt;div&gt;# 第一次在&amp;lt;&amp;lt;前换行的penalty&lt;/div&gt;&lt;div&gt;PenaltyBreakFirstLessLess:&amp;nbsp; &amp;nbsp; 120&lt;/div&gt;&lt;div&gt;# 在一个字符串字面量中引入换行的penalty&lt;/div&gt;&lt;div&gt;PenaltyBreakString:&amp;nbsp; &amp;nbsp; 1000&lt;/div&gt;&lt;div&gt;# 对于每个在行字符数限制之外的字符的penalty&lt;/div&gt;&lt;div&gt;PenaltyExcessCharacter:&amp;nbsp; &amp;nbsp; 1000000&lt;/div&gt;&lt;div&gt;# 将函数的返回类型放到它自己的行的penalty&lt;/div&gt;&lt;div&gt;PenaltyReturnTypeOnItsOwnLine:&amp;nbsp; &amp;nbsp; 60&lt;/div&gt;&lt;div&gt;# 指针和引用的对齐: Left, Right, Middle&lt;/div&gt;&lt;div&gt;PointerAlignment:&amp;nbsp; &amp;nbsp; Left&lt;/div&gt;&lt;div&gt;# 允许重新排版注释&lt;/div&gt;&lt;div&gt;ReflowComments:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 允许排序#include&lt;/div&gt;&lt;div&gt;SortIncludes:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 在C风格类型转换后添加空格&lt;/div&gt;&lt;div&gt;SpaceAfterCStyleCast:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 在赋值运算符之前添加空格&lt;/div&gt;&lt;div&gt;SpaceBeforeAssignmentOperators:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 开圆括号之前添加一个空格: Never, ControlStatements, Always&lt;/div&gt;&lt;div&gt;SpaceBeforeParens:&amp;nbsp; &amp;nbsp; ControlStatements&lt;/div&gt;&lt;div&gt;# 在空的圆括号中添加空格&lt;/div&gt;&lt;div&gt;SpaceInEmptyParentheses:&amp;nbsp; &amp;nbsp; false&lt;/div&gt;&lt;div&gt;# 在尾随的评论前添加的空格数(只适用于//)&lt;/div&gt;&lt;div&gt;SpacesBeforeTrailingComments:&amp;nbsp; &amp;nbsp; 2&lt;/div&gt;&lt;div&gt;# 在尖括号的&amp;lt;后和&amp;gt;前添加空格&lt;/div&gt;&lt;div&gt;SpacesInAngles:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 在容器(ObjC和JavaScript的数组和字典等)字面量中添加空格&lt;/div&gt;&lt;div&gt;SpacesInContainerLiterals:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 在C风格类型转换的括号中添加空格&lt;/div&gt;&lt;div&gt;SpacesInCStyleCastParentheses:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 在圆括号的(后和)前添加空格&lt;/div&gt;&lt;div&gt;SpacesInParentheses:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 在方括号的[后和]前添加空格，lamda表达式和未指明大小的数组的声明不受影响&lt;/div&gt;&lt;div&gt;SpacesInSquareBrackets:&amp;nbsp; &amp;nbsp; true&lt;/div&gt;&lt;div&gt;# 标准: Cpp03, Cpp11, Auto&lt;/div&gt;&lt;div&gt;Standard:&amp;nbsp; &amp;nbsp; Cpp11&lt;/div&gt;&lt;div&gt;# tab宽度&lt;/div&gt;&lt;div&gt;TabWidth:&amp;nbsp; &amp;nbsp; 4&lt;/div&gt;&lt;div&gt;# 使用tab字符: Never, ForIndentation, ForContinuationAndIndentation, Always&lt;/div&gt;&lt;div&gt;UseTab:&amp;nbsp; &amp;nbsp; Never&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontFamily=Lucida Console;fontColor=#53B078;" vertex="1" parent="1">
                    <mxGeometry x="-990" y="-770" width="800" height="2410" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>